import streamlit as st
import numpy as np
import matplotlib.pyplot as plt

# H√†m tr·ª±c quan h√≥a MNIST v·ªõi t√πy ch·ªçn t∆∞∆°ng t√°c
def visualize_mnist(X: np.ndarray, y: np.ndarray, num_examples: int = 10) -> None:
    if X is None or y is None:
        st.error('Kh√¥ng c√≥ d·ªØ li·ªáu ƒë·ªÉ tr·ª±c quan h√≥a.')
        return

    st.subheader('üåü V√≠ d·ª• c√°c ch·ªØ s·ªë trong MNIST')
    unique_labels = np.unique(y)
    images = []
    for label in unique_labels[:num_examples]:
        try:
            idx = np.nonzero(y == label)[0][0]
            images.append((X[idx], label))
        except IndexError:
            st.error(f'Kh√¥ng t√¨m th·∫•y d·ªØ li·ªáu cho nh√£n {label}.')
            continue

    if not images:
        st.error('Kh√¥ng c√≥ h√¨nh ·∫£nh n√†o ƒë·ªÉ hi·ªÉn th·ªã.')
        return

    cols = st.columns(min(num_examples, 5))
    for i, (image, label) in enumerate(images):
        with cols[i % len(cols)]:
            st.image(image, caption=f'Ch·ªØ s·ªë: {label}', use_container_width=True, clamp=True)

def preprocess_mnist(X_full, y_full):
    st.header('Ti·ªÅn x·ª≠ l√Ω D·ªØ li·ªáu MNIST Ch·ªØ s·ªë Vi·∫øt Tay üñåÔ∏è')
    total_samples = len(X_full)

    st.subheader('Th√¥ng tin D·ªØ li·ªáu MNIST ƒê·∫ßy ƒë·ªß üîç')
    st.write(f'T·ªïng s·ªë l∆∞·ª£ng m·∫´u: {total_samples}')

    num_examples = st.slider(
        'Ch·ªçn s·ªë l∆∞·ª£ng v√≠ d·ª• ch·ªØ s·ªë ƒë·ªÉ xem (t·ªëi ƒëa 10)',
        min_value=1, max_value=10, value=5, key='num_examples_slider'
    )
    visualize_mnist(X_full, y_full, num_examples)

    with st.expander('Th√¥ng tin chi ti·∫øt v·ªÅ MNIST'):
        st.write('### Gi·ªõi thi·ªáu v·ªÅ MNIST\n' +
                 'MNIST l√† t·∫≠p d·ªØ li·ªáu ti√™u chu·∫©n cho nh·∫≠n d·∫°ng ch·ªØ s·ªë vi·∫øt tay.\n\n' +
                 '- C·∫•u tr√∫c d·ªØ li·ªáu:\n' +
                 '  - 60.000 ·∫£nh hu·∫•n luy·ªán\n' +
                 '  - 10.000 ·∫£nh ki·ªÉm tra\n' +
                 '  - ·∫¢nh grayscale 28x28 pixel.\n\n' +
                 '- Chu·∫©n h√≥a: Pixel t·ª´ [0, 255] v·ªÅ [0, 1].')

    st.header('üìà Ph√¢n ph·ªëi c√°c nh√£n trong MNIST')
    fig, ax = plt.subplots(figsize=(8, 4))
    unique, counts = np.unique(y_full, return_counts=True)
    ax.bar(unique, counts, tick_label=[str(i) for i in unique], color='skyblue', edgecolor='black')
    ax.set_title('Ph√¢n ph·ªëi c√°c ch·ªØ s·ªë', fontsize=12, pad=15)
    ax.set_xlabel('Ch·ªØ s·ªë', fontsize=10)
    ax.set_ylabel('S·ªë l∆∞·ª£ng', fontsize=10)
    ax.grid(True, linestyle='--', alpha=0.7)
    st.pyplot(fig, use_container_width=True)